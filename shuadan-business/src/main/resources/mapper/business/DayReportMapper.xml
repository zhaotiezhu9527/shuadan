<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juhai.business.mapper.DayReportMapper">
    
    <resultMap type="DayReport" id="DayReportResult">
        <result property="id"    column="id"    />
        <result property="userName"    column="user_name"    />
        <result property="today"    column="today"    />
        <result property="deposit"    column="deposit"    />
        <result property="withdraw"    column="withdraw"    />
        <result property="bet"    column="bet"    />
        <result property="commission"    column="commission"    />
        <result property="income"    column="income"    />
        <result property="userAgent"    column="user_agent"    />
        <result property="userAgentNode"    column="user_agent_node"    />
        <result property="userAgentLevel"    column="user_agent_level"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDayReportVo">
        select id, user_name, today, deposit, withdraw, bet, commission, income, user_agent, user_agent_node, user_agent_level, create_time, update_time from t_day_report
    </sql>

    <select id="selectDayReportList" parameterType="DayReport" resultMap="DayReportResult">
        <include refid="selectDayReportVo"/>
        <where>  
            <if test="userName != null  and userName != ''"> and user_name = #{userName}</if>
            <if test="today != null "> and today = #{today}</if>
            <if test="deposit != null "> and deposit = #{deposit}</if>
            <if test="withdraw != null "> and withdraw = #{withdraw}</if>
            <if test="bet != null "> and bet = #{bet}</if>
            <if test="commission != null "> and commission = #{commission}</if>
            <if test="income != null "> and income = #{income}</if>
            <if test="userAgent != null  and userAgent != ''"> and user_agent = #{userAgent}</if>
            <if test="userAgentNode != null  and userAgentNode != ''"> and user_agent_node = #{userAgentNode}</if>
            <if test="userAgentLevel != null "> and user_agent_level = #{userAgentLevel}</if>
        </where>
    </select>
    
    <select id="selectDayReportById" parameterType="Long" resultMap="DayReportResult">
        <include refid="selectDayReportVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertDayReport" parameterType="DayReport" useGeneratedKeys="true" keyProperty="id">
        insert into t_day_report
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="today != null">today,</if>
            <if test="deposit != null">deposit,</if>
            <if test="withdraw != null">withdraw,</if>
            <if test="bet != null">bet,</if>
            <if test="commission != null">commission,</if>
            <if test="income != null">income,</if>
            <if test="userAgent != null">user_agent,</if>
            <if test="userAgentNode != null">user_agent_node,</if>
            <if test="userAgentLevel != null">user_agent_level,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="today != null">#{today},</if>
            <if test="deposit != null">#{deposit},</if>
            <if test="withdraw != null">#{withdraw},</if>
            <if test="bet != null">#{bet},</if>
            <if test="commission != null">#{commission},</if>
            <if test="income != null">#{income},</if>
            <if test="userAgent != null">#{userAgent},</if>
            <if test="userAgentNode != null">#{userAgentNode},</if>
            <if test="userAgentLevel != null">#{userAgentLevel},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateDayReport" parameterType="DayReport">
        update t_day_report
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="today != null">today = #{today},</if>
            <if test="deposit != null">deposit = #{deposit},</if>
            <if test="withdraw != null">withdraw = #{withdraw},</if>
            <if test="bet != null">bet = #{bet},</if>
            <if test="commission != null">commission = #{commission},</if>
            <if test="income != null">income = #{income},</if>
            <if test="userAgent != null">user_agent = #{userAgent},</if>
            <if test="userAgentNode != null">user_agent_node = #{userAgentNode},</if>
            <if test="userAgentLevel != null">user_agent_level = #{userAgentLevel},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDayReportById" parameterType="Long">
        delete from t_day_report where id = #{id}
    </delete>

    <delete id="deleteDayReportByIds" parameterType="String">
        delete from t_day_report where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchInsertOrUpdate">
        <foreach collection="list" index="index" item="report" separator=";">
            insert into t_day_report
            (user_name, today, deposit,withdraw,bet, commission, income,
            user_agent, user_agent_node, user_agent_level, create_time, update_time)
            VALUES (
            #{report.userName},
            #{report.today},
            #{report.deposit},
            #{report.withdraw},
            #{report.bet},
            #{report.commission},
            #{report.income},
            #{report.userAgent},
            #{report.userAgentNode},
            #{report.userAgentLevel},
            #{report.createTime},
            #{report.updateTime})
            ON DUPLICATE KEY UPDATE
            <if test="report.deposit != null and report.deposit != 0">
                deposit = deposit + #{report.deposit},
            </if>
            <if test="report.withdraw != null and report.withdraw != 0">
                withdraw = withdraw + #{report.withdraw},
            </if>
            <if test="report.bet != null and report.bet != 0">
                bet = bet + #{report.bet},
            </if>
            <if test="report.commission != null and report.commission != 0">
                commission = commission + #{report.commission},
            </if>
            <if test="report.income != null and report.income != 0">
                income = income + #{report.income},
            </if>
            update_time = #{report.updateTime}
        </foreach>
    </insert>

    <insert id="insertOrUpdate">
        insert into t_day_report
        (user_name, today, deposit, withdraw, bet, commission, income,
        user_agent, user_agent_node, user_agent_level, create_time, update_time)
        VALUES (#{report.userName},
        #{report.today},
        #{report.deposit},
        #{report.withdraw},
        #{report.bet},
        #{report.commission},
        #{report.income},
        #{report.userAgent},
        #{report.userAgentNode},
        #{report.userAgentLevel},
        #{report.createTime},
        #{report.updateTime}) ON DUPLICATE KEY
        UPDATE
        <if test="report.deposit != null and report.deposit != 0">
            deposit = deposit + #{report.deposit},
        </if>
        <if test="report.withdraw != null and report.withdraw != 0">
            withdraw = withdraw + #{report.withdraw},
        </if>
        <if test="report.bet != null and report.bet != 0">
            bet = bet + #{report.bet},
        </if>
        <if test="report.commission != null and report.commission != 0">
            commission = commission + #{report.commission},
        </if>
        <if test="report.income != null and report.income != 0">
            income = income + #{report.income},
        </if>
        update_time = #{report.updateTime}
    </insert>
</mapper>